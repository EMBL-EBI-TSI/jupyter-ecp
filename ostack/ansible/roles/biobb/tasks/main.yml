- name: Download Workflow code from repo URL - "{{ repo_url }}"
  git: >
      repo="{{ repo_url }}"
      dest="{{ ansible_env.HOME }}/bioexcel"

- name: Check env file exists "{{ ansible_env.HOME }}/bioexcel/{{ conda_environment_file_path }}"
  stat:
    path: '{{ ansible_env.HOME }}/bioexcel/{{ conda_environment_file_path }}'
  register: env_file

- debug:
    msg: "env_file - {{ env_file.stat }} "

- name: Update conda
  conda:
    name: conda
    state: latest
    executable: '{{ ansible_env.HOME }}/miniconda3/bin/conda'

- name: Create a conda environment - "{{ conda_environment }}"
  conda:
    name: python
    version: '{{ python_version  }}'
    environment: "{{ conda_environment }}"
    state: present
    executable: '{{ ansible_env.HOME }}/miniconda3/bin/conda'
  when: env_file.stat.exists == False  

- name: Install biobb packages in the environment "{{ conda_environment  }}"
  conda:
    environment: "{{ conda_environment }}"
    name:
      - biobb_io=0.1.4
      - biobb_model=0.1.8
      - biobb_md=0.1.5
      - nglview=1.2.0
      - simpletraj
      - gromacs
    executable: '{{ ansible_env.HOME }}/miniconda3/bin/conda'
    channels:
      - conda-forge
      - bioconda
  when: env_file.stat.exists == False 

- name: Create conda env & Install packages from env file - "{{ conda_environment_file_path  }}"
  shell: bash -ilc 'conda env create -f bioexcel/{{ conda_environment_file_path }}'
  when: env_file.stat.exists

- name: Add line to bash_profile to activate biobb environment
  lineinfile:
    path: '{{ ansible_env.HOME }}/.profile'
    state: present
    line: 'conda activate {{ conda_environment }}'

- name: Install manually pocl
  shell: bash -ilc 'conda install -y pocl'
  when: package_install == ""

- name: Enable jupyter-nbextension nglview
  shell: bash -ilc 'jupyter-nbextension enable nglview --py --sys-prefix'
  when: package_install == ""

- name: Install manually some packages
  shell: bash -ilc '{{ package_install }}'
  when: package_install != ""

- name: Execute post install commands
  shell: bash -ilc '{{ post_install }}'
  when: post_install != ""

