---  
- name: Create openssl directory
  file:
   path: '{{ ansible_env.HOME }}/openssl'
   state: directory
   mode: '0755'

- name: Create system script directory
  file:
   path: '{{ ansible_env.HOME }}/system_script'
   state: directory
   mode: '0755'

- name: Generate OpenSSL key and certificate
  shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout {{jupyter_keyfile}} -out {{jupyter_certfile}} -subj "/C=GB/ST=Cambridge/L=Cambridge/O=Global Security/OU=IT Department/CN=ebi.ac.uk/EA=cloud-portal@ebi.ac.uk"

- name: openssl - permission for certfile
  become: yes
  file:
   path: "{{jupyter_certfile}}"
   mode: '0777'
 
- name: openssl - permission for keyfile
  become: yes
  file:
   path: "{{jupyter_keyfile}}"
   mode: '0777'
  
- name: Generate Random token for Jupyter login 
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'python -c "import secrets; print(secrets.token_hex(16));"'
  register: random_token_output
  changed_when: no

- name: Remember Jupyter login token
  set_fact:
   jupyter_token: '{{ random_token_output.stdout }}'
  changed_when: no
  
- name:  Install Jupyter notebook
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'conda install notebook'

- name: Create Jupyter profile
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'jupyter notebook --generate-config'

- name: Apply Jupyter config
  template:
    src: jupyter_notebook_config.py.j2
    dest: '{{ jupyter_config_filename }}'
    mode: 0644
    force: yes

- name: Create Jupyter start script
  template:
     src: start_jupyter.sh.j2
     dest: '{{ jupyter_start_script_file }}'
     force: yes
     mode: '0755'

- name: Make sure systemd directory exists
  become: yes
  become_user: root
  file:
     path: '{{ jupyter_daemon_systemd_dir }}'
     state: directory

- name: Create systemd script
  become: yes
  become_user: root
  template:
     src: jupyter.service.j2
     dest: '{{ jupyter_daemon_systemd_filename }}'
     force: yes 

- name: Put Jupyter token into Portal outputs endpoint
  uri:
    url: '{{ portal_base_url }}/deployment/{{ portal_reference }}/outputs'
    method: PUT
    body: '[{"outputName":"jupyter_server_url","generatedValue":"https://{{ ansible_host }}:{{ jupyter_port }}"},{"outputName":"jupyter_login_token","generatedValue":"{{ jupyter_token }}"}]'
    body_format: json
    status_code: 204
    headers:
      Deployment-Secret: '{{ portal_callback_secret }}'
      Content-Type: "application/json;charset=UTF-8"
  
- name: Enable Jupyter daemon
  become: yes
  become_user: "{{ ansible_user }}"
  shell: bash -ilc 'sudo systemctl enable jupyter.service;sudo systemctl daemon-reload;sudo systemctl start jupyter.service'  
